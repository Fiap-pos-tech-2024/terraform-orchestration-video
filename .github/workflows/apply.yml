name: Terraform Apply All

on:
  workflow_dispatch:

jobs:
  apply-all:
    name: Apply All Terraform Modules
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Orchestration Repo
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: ✅ Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Checkout network-terraform
        uses: actions/checkout@v3
        with:
          repository: eamaral/network-terraform
          path: network-terraform
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Terraform Apply - network
        working-directory: network-terraform
        run: |
          terraform init
          terraform apply -auto-approve

      - name: Checkout alb-terraform
        uses: actions/checkout@v3
        with:
          repository: eamaral/alb-terraform
          path: alb-terraform
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Terraform Apply - alb
        working-directory: alb-terraform
        run: |
          terraform init
          VPC_ID=$(terraform -chdir=../network-terraform output -raw vpc_id)
          PRIVATE_SUBNETS=$(terraform -chdir=../network-terraform output -json private_subnets | jq -c)
          terraform apply -auto-approve \
            -var="vpc_id=$VPC_ID" \
            -var='private_subnets='"$PRIVATE_SUBNETS"

      - name: Checkout cognito-terraform
        uses: actions/checkout@v3
        with:
          repository: eamaral/cognito-terraform
          path: cognito-terraform
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Terraform Apply - cognito
        working-directory: cognito-terraform
        run: |
          terraform init
          terraform apply -auto-approve

      - name: Checkout ecs-terraform
        uses: actions/checkout@v3
        with:
          repository: eamaral/ecs-terraform
          path: ecs-terraform
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Terraform Apply - ecs
        working-directory: ecs-terraform
        run: |
          terraform init
          VPC_ID=$(terraform -chdir=../network-terraform output -raw vpc_id)
          PRIVATE_SUBNETS=$(terraform -chdir=../network-terraform output -json private_subnets | jq -c)
          ALB_TG_ARN=$(terraform -chdir=../alb-terraform output -raw alb_target_group_arn)
          ALB_SG_ID=$(terraform -chdir=../alb-terraform output -raw alb_sg_id)
          ECR_IMAGE_URL="124355673305.dkr.ecr.us-east-1.amazonaws.com/fastfood-backend:latest"

          terraform apply -auto-approve \
            -var="vpc_id=$VPC_ID" \
            -var='private_subnets='"$PRIVATE_SUBNETS" \
            -var="alb_target_group_arn=$ALB_TG_ARN" \
            -var="alb_sg_id=$ALB_SG_ID" \
            -var="ecr_image_url=$ECR_IMAGE_URL"

      - name: Checkout db-terraform
        uses: actions/checkout@v3
        with:
          repository: eamaral/db-terraform
          path: db-terraform
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Terraform Apply - db
        working-directory: db-terraform
        run: |
          terraform init
          VPC_ID=$(terraform -chdir=../network-terraform output -raw vpc_id)
          PRIVATE_SUBNETS=$(terraform -chdir=../network-terraform output -json private_subnets | jq -c)
          ECS_SG_ID=$(terraform -chdir=../ecs-terraform output -raw ecs_service_sg_id)
          terraform apply -auto-approve \
            -var="vpc_id=$VPC_ID" \
            -var='private_subnets='"$PRIVATE_SUBNETS" \
            -var="ecs_service_sg_id=$ECS_SG_ID" \
            -var="db_username=admin" \
            -var="db_password=Senha123"

      - name: Checkout api-gateway-terraform
        uses: actions/checkout@v3
        with:
          repository: eamaral/api-gateway-terraform
          path: api-gateway-terraform
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Terraform Apply - api-gateway
        working-directory: api-gateway-terraform
        run: |
          terraform init
          PRIVATE_SUBNETS=$(terraform -chdir=../network-terraform output -json private_subnets | jq -c)
          ALB_SG_ID=$(terraform -chdir=../alb-terraform output -raw alb_sg_id)
          ALB_LISTENER_ARN=$(terraform -chdir=../alb-terraform output -raw alb_listener_arn)
          terraform apply -auto-approve \
            -var='private_subnets='"$PRIVATE_SUBNETS" \
            -var="lb_security_group_id=$ALB_SG_ID" \
            -var="alb_listener_arn=$ALB_LISTENER_ARN"

      - name: Dar permissão de execução ao script
        run: chmod +x generate-env.sh

      - name: Gerar .env.example com outputs do Terraform
        run: ./generate-env.sh

      - name: Commitar .env.example no repositório do backend
        run: |
          git clone https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/eamaral/fastfood-backend.git
          cd fastfood-backend
          mv ../.env.example .env.example
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add .env.example
          git commit -m "Atualiza .env.example com outputs do Terraform" || echo "Nada para commitar"
          git push origin main