name: Terraform Apply All

on:
  workflow_dispatch:

jobs:
  apply-all:
    name: Apply All Terraform Modules
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1

    steps:
      - name: Checkout Orchestration Repo
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Checkout Reposit√≥rios Terraform
        uses: actions/checkout@v3
        with:
          repository: eamaral/network-terraform
          path: network-terraform
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - uses: actions/checkout@v3
        with:
          repository: eamaral/alb-terraform
          path: alb-terraform
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - uses: actions/checkout@v3
        with:
          repository: eamaral/cognito-terraform
          path: cognito-terraform
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - uses: actions/checkout@v3
        with:
          repository: eamaral/ecs-terraform
          path: ecs-terraform
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - uses: actions/checkout@v3
        with:
          repository: eamaral/db-terraform
          path: db-terraform
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - uses: actions/checkout@v3
        with:
          repository: eamaral/api-gateway-terraform
          path: api-gateway-terraform
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: ‚úÖ Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # NETWORK
      - name: Terraform Apply - network
        working-directory: network-terraform
        run: |
          terraform init
          terraform apply -auto-approve

      - name: üîÑ Exportar outputs do network
        id: network
        run: |
          echo "vpc_id=$(terraform -chdir=network-terraform output -raw vpc_id)" >> $GITHUB_OUTPUT
          echo "private_subnets=$(terraform -chdir=network-terraform output -json private_subnets | jq -c)" >> $GITHUB_OUTPUT
          echo "public_subnets=$(terraform -chdir=network-terraform output -json public_subnets | jq -c)" >> $GITHUB_OUTPUT

      # ALB
      - name: Terraform Apply - alb
        working-directory: alb-terraform
        run: |
          echo '${{ steps.network.outputs.private_subnets }}' > private_subnets.json
          terraform init
          terraform apply -auto-approve \
            -var="vpc_id=${{ steps.network.outputs.vpc_id }}" \
            -var='private_subnets=${{ steps.network.outputs.private_subnets }}'

      # COGNITO
      - name: Terraform Apply - cognito
        working-directory: cognito-terraform
        run: |
          terraform init
          terraform apply -auto-approve

      # ECS
      - name: Terraform Apply - ecs
        working-directory: ecs-terraform
        run: |
          terraform init
          terraform apply -auto-approve

      # DB
      - name: Terraform Apply - db
        working-directory: db-terraform
        run: |
          terraform init
          terraform apply -auto-approve

      # API Gateway
      - name: Terraform Apply - api-gateway
        working-directory: api-gateway-terraform
        run: |
          terraform init
          terraform apply -auto-approve

      # GERA√á√ÉO DO ENV
      - name: Dar permiss√£o de execu√ß√£o ao script
        run: chmod +x generate-env.sh

      - name: Gerar .env.example com outputs do Terraform
        run: ./generate-env.sh

      - name: Commitar .env.example no reposit√≥rio do backend
        run: |
          git clone https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/eamaral/fastfood-backend.git
          cd fastfood-backend
          mv ../.env.example .env.example
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add .env.example
          git commit -m "Atualiza .env.example com outputs do Terraform" || echo "Nada para commitar"
          git push origin main